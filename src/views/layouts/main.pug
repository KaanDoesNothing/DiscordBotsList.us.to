<!DOCTYPE html>
html(lang="en")
    head
        link(rel="icon", type="image/png", href=client.user.displayAvatarURL({size: 64}))
        meta(charset="UTF-8")
        meta(name="viewport", content="width=device-width, initial-scale=1.0")

        block head
        
        link(rel="stylesheet", type="text/css", href="/static/app/dist/index.css")
        
        title Discord Bots

        link(rel="stylesheet", type="text/css", href="/static/css/darkmode.css" id="darkmode")   
    body 
        label(class="text-center")
            div(class="lds-dual-ring")

        block content

        div(id="app")

        style.
            .lds-dual-ring {
                display: flex;
                align-items: center;
                width: 80px;
                height: 80px;
            }
            .lds-dual-ring:after {
                content: " ";
                display: block;
                width: 64px;
                height: 64px;
                margin: 8px;
                border-radius: 50%;
                border: 6px solid #fff;
                border-color: #fff transparent #fff transparent;
                animation: lds-dual-ring 1.2s linear infinite;
            }
            @keyframes lds-dual-ring {
                0% {
                    transform: rotate(0deg);
                }
                100% {
                    transform: rotate(360deg);
                }
            }

        if regions
            script.
                const regions = !{JSON.stringify(regions)};
                let lastRegion = "";
                let lastMS = 1000000;

                //- console.log(regions.keys());

                document.addEventListener("DOMContentLoaded", async () => {
                    for (let i = 0; i < regions.length; i++) {
                        let region = regions[i];

                        let dateNow = Date.now();

                        await fetch(`${region}/api/bots/all/json`).then(res => res.json());

                        let finalDate = dateNow - Date.now();

                        //- console.log(`${}`);
                    }

                    console.log("Done.");
                    
                });

                function sleep(ms) {
                    return new Promise(resolve => setTimeout(resolve, ms));
                }
        else
            script(src="/static/app/dist/index.js", defer)