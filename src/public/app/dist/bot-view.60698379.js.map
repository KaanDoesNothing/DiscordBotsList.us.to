{"version":3,"sources":["pages/bot-view.vue"],"names":[],"mappings":";AA0FA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAHA,IAAA,EAAA,QAAA,QACA,EAAA,EAAA,QAAA,UAEA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,KAAA,GAAA,GAAA,OAAA,sBAAA,CAAA,IAAA,EAAA,OAAA,sBAAA,GAAA,IAAA,EAAA,EAAA,OAAA,SAAA,GAAA,OAAA,OAAA,yBAAA,EAAA,GAAA,cAAA,EAAA,KAAA,MAAA,EAAA,GAAA,OAAA,EAAA,SAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,UAAA,OAAA,IAAA,CAAA,IAAA,EAAA,MAAA,UAAA,GAAA,UAAA,GAAA,GAAA,EAAA,EAAA,EAAA,OAAA,IAAA,GAAA,QAAA,SAAA,GAAA,EAAA,EAAA,EAAA,EAAA,MAAA,OAAA,0BAAA,OAAA,iBAAA,EAAA,OAAA,0BAAA,IAAA,EAAA,OAAA,IAAA,QAAA,SAAA,GAAA,OAAA,eAAA,EAAA,EAAA,OAAA,yBAAA,EAAA,MAAA,OAAA,EAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,KAAA,EAAA,OAAA,eAAA,EAAA,EAAA,CAAA,MAAA,EAAA,YAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,CACA,KAAA,WACA,MAAA,CACA,SAAA,EACA,SAAA,GACA,gBAAA,GACA,UAAA,GACA,MAAA,GACA,OAAA,KAGA,QAAA,WACA,KAAA,OAAA,KAAA,OAAA,OAAA,GAEA,KAAA,WACA,KAAA,gBACA,KAAA,cAEA,QAAA,CACA,SAAA,WAAA,IAAA,EAAA,KACA,EAAA,QAAA,IAAA,YAAA,OAAA,KAAA,SAAA,KAAA,SAAA,GACA,EAAA,IAAA,EAAA,KAAA,OAGA,cAAA,WAAA,IAAA,EAAA,KACA,EAAA,QAAA,IAAA,qBAAA,OAAA,KAAA,SAAA,KAAA,SAAA,GACA,EAAA,SAAA,EAAA,KAAA,YAGA,WAAA,WAAA,IAAA,EAAA,KACA,EAAA,QAAA,IAAA,kBAAA,OAAA,KAAA,SAAA,KAAA,SAAA,GACA,EAAA,MAAA,EAAA,KAAA,SAGA,YAAA,WAAA,IAAA,EAAA,KACA,EAAA,QAAA,KAAA,qBAAA,OAAA,KAAA,QAAA,CAAA,QAAA,KAAA,kBAAA,KAAA,SAAA,GACA,EAAA,KAAA,KACA,EAAA,gBACA,EAAA,gBAAA,GACA,EAAA,UAAA,IAEA,EAAA,UAAA,EAAA,KAAA,UAKA,SAAA,EAAA,CACA,eAAA,WAEA,SAAA,KAAA,UAAA,KAAA,MAAA,KAAA,QAAA,MAAA,KAAA,IAAA,YAEA,EAAA,EAAA,UAAA,CAAA,UAAA,iBAnDA,QAAA,QAAA","file":"bot-view.60698379.js","sourceRoot":"..","sourcesContent":["<template lang=\"pug\">\r\n    div(class=\"container\" id=\"mainBotView\")\r\n            div(class=\"card is-shadow\" v-if=\"bot\")\r\n                div(class=\"card-image has-text-centered\")\r\n                    img(class=\"is-rounded\" id=\"avatar\" alt=\"Bot Avatar\" :src=\"bot.user.avatarURL\" width=\"256\" height=\"256\")\r\n\r\n                div(class=\"card-content has-text-centered\")\r\n                    label(class=\"title\") {{bot.user.username}}\r\n\r\n                    br\r\n                    \r\n                    div(class=\"control\")\r\n                        br\r\n                        span(class=\"tag\") Owner\r\n                        a(class=\"tag is-info\") {{bot.owner.tag}}\r\n\r\n                    div(class=\"control\")\r\n                        br\r\n                        span(class=\"tag\") Verified\r\n                        a(class=\"tag is-success\" v-if=\"bot.verified\") Yes\r\n                        a(class=\"tag is-danger\" v-if=\"!bot.verified\") No\r\n\r\n                    div(class=\"control\")\r\n                        br\r\n                        span(class=\"tag\") Prefix\r\n                        a(class=\"tag is-info\") {{bot.prefix}}\r\n\r\n                    div(v-if=\"stats\")\r\n                        div(class=\"control\" v-if=\"stats.guilds\")\r\n                            br\r\n                            span(class=\"tag\") Guilds\r\n                            a(class=\"tag is-info\") {{stats.guilds}}\r\n                        div(class=\"control\" v-if=\"stats.channels\")\r\n                            br\r\n                            span(class=\"tag\") Channels\r\n                            a(class=\"tag is-info\") {{stats.channels}}\r\n                        div(class=\"control\" v-if=\"stats.users\")\r\n                            br\r\n                            span(class=\"tag\") users\r\n                            a(class=\"tag is-info\") {{stats.users}}\r\n\r\n                    div(class=\"control\")\r\n                        br\r\n                        div(class=\"buttons is-centered\")\r\n                            a(class=\"button is-dark\" :href=\"bot.invite_link\") Invite\r\n                            a(class=\"button is-dark\" :href=\"bot.website_link\") Website\r\n                            //- a(class=\"button is-dark\" v-if=\"hasPermissions\" :href=\"`/bot/${bot.bot_id}/edit`\") Api Key\r\n                            router-link(class=\"button is-dark\" v-if=\"hasPermissions\" :to=\"`/bot/${bot.bot_id}/edit`\") Edit\r\n\r\n                    br\r\n                    \r\n                    div(class=\"message has-text-centered\")\r\n                        div(class=\"message-header text-center\") Description\r\n                        div(class=\"message-body\") {{bot.description}}\r\n            \r\n            br\r\n\r\n            div(class=\"container\")\r\n                div(class=\"card is-shadow\")\r\n                    div(class=\"card-header\")\r\n                        label(class=\"card-header-title\") Comments\r\n                    div(class=\"card-content\")\r\n\r\n                        div(class=\"field\")\r\n                            div(class=\"notification is-danger\" v-if=\"lastError\") {{lastError}}\r\n                        \r\n                        div(class=\"field has-addons\" v-if=\"isLoggedIn\")\r\n                            div(class=\"control is-expanded\")\r\n                                input(class=\"input\" type=\"text\" placeholder=\"Message content here.\" v-model=\"comment_content\")\r\n                            div(class=\"control\")\r\n                                a(class=\"button is-info\" @click=\"postComment\") Comment\r\n\r\n                        div(class=\"media\" v-for=\"comment in comments\")\r\n                            div(class=\"media-left\")\r\n                                label(class=\"image is-64x64\")\r\n                                    img(class=\"is-rounded\" :src=\"comment.author.displayAvatarURL\")\r\n                            div(class=\"media-content\")\r\n                                div(class=\"content\")\r\n                                    a(:href=\"`/profile/${comment.author_id}`\")\r\n                                        strong {{comment.author.username}} \r\n                                    label {{comment.readableCommentDate}}\r\n                                    br\r\n                                    label {{comment.content}}\r\n                                    br\r\n</template>\r\n\r\n<script>\r\n    import {mapState} from \"vuex\";\r\n    import Axios from \"axios\";\r\n\r\n    export default {\r\n        data() {\r\n            return {\r\n                bot: undefined,\r\n                comments: [],\r\n                comment_content: \"\",\r\n                lastError: \"\",\r\n                stats: {},\r\n                bot_id: \"\"\r\n            }\r\n        },\r\n        mounted() {\r\n            this.bot_id = this.$route.params.id;\r\n\r\n            this.fetchBot();\r\n            this.fetchComments();\r\n            this.fetchStats();\r\n        },\r\n        methods: {\r\n            fetchBot() {\r\n                Axios.get(`/api/bot/${this.bot_id}`).then(res => {\r\n                    this.bot = res.data.bot;\r\n                });\r\n            },\r\n            fetchComments() {\r\n                Axios.get(`/api/bot/comments/${this.bot_id}`).then(res => {\r\n                    this.comments = res.data.comments;\r\n                });\r\n            },\r\n            fetchStats() {\r\n                Axios.get(`/api/bot/stats/${this.bot_id}`).then(res => {\r\n                    this.stats = res.data.stats;\r\n                });\r\n            },\r\n            postComment() {\r\n                Axios.post(`/api/bot/comments/${this.bot_id}`, {content: this.comment_content}).then(res => {\r\n                    if(res.data.msg) {\r\n                        this.fetchComments();\r\n                        this.comment_content = \"\";\r\n                        this.lastError = \"\";\r\n                    }else {\r\n                        this.lastError = res.data.error;\r\n                    }\r\n                });\r\n            }\r\n        },\r\n        computed: {\r\n            hasPermissions() {\r\n                // console.log(this.session && this.bot ? this.session._id === this.bot_id : false)\r\n                return this.session && this.bot ? this.session._id === this.bot.owner_id : false;\r\n            },\r\n            ...mapState([\"session\", \"isLoggedIn\"])\r\n        }\r\n    }\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n    #mainBotView {\r\n        padding: 5%;\r\n    }\r\n\r\n    #avatar {\r\n        margin: 1%;\r\n    }\r\n\r\n    @media (min-width: 768px) {\r\n        #mainBotView {\r\n            width: 800px;\r\n            margin-top: 1%;\r\n            padding: 0%;\r\n        }\r\n    }\r\n\r\n    .message {\r\n        min-height: 250px;\r\n    }\r\n\r\n    .message-header {\r\n        text-align: center !important;\r\n    }\r\n\r\n    .editInput {\r\n        text-align: center !important;\r\n        width: 40%;\r\n    }\r\n</style>"]}