{"version":3,"sources":["components/navbar.vue"],"names":[],"mappings":";AA8BA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAJA,IAAA,EAAA,EAAA,QAAA,QACA,EAAA,EAAA,QAAA,UACA,EAAA,QAAA,QAEA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAAA,IAAA,EAAA,EAAA,QAAA,OAAA,CACA,KAAA,SACA,KAAA,WACA,MAAA,CACA,cAAA,IAGA,QAAA,CACA,YAAA,WACA,IAAA,EAAA,KAAA,OAAA,MAAA,SAEA,KAAA,OAAA,OAAA,eAAA,KAGA,UAAA,EAAA,EAAA,UAAA,CAAA,UAAA,aAAA,eAdA,QAAA,QAAA","file":"navbar.096d125b.js","sourceRoot":"..","sourcesContent":["<template lang=\"pug\">\r\n    nav(class=\"navbar has-shadow\", role=\"navigation\")\r\n        div(class=\"navbar-brand\")\r\n            router-link(class=\"navbar-item\", to=\"/\") Discord Bots\r\n\r\n            a(class=\"navbar-burger\", @click=\"isNavbarOpen = !isNavbarOpen\")\r\n                span(aria-hidden=\"true\")\r\n                span(aria-hidden=\"true\")\r\n                span(aria-hidden=\"true\")\r\n\r\n        div(class=\"navbar-menu\", :class=\"{'is-active': isNavbarOpen}\" id=\"navbarContent\")\r\n            div(class=\"navbar-end\")\r\n                a(class=\"navbar-item\", @click=\"switchTheme\") {{darkmode ? \"Light\" : \"Dark\"}}\r\n                \r\n                template(v-if=\"isLoggedIn\")\r\n                    //- if session.permissions.moderator\r\n                    //-     a(class=\"navbar-item\", href=`/admin`) Admin\r\n\r\n                    router-link(class=\"navbar-item\", :to=\"'/add'\") Add Bot\r\n                    router-link(class=\"navbar-item\", :to=\"'/profile/' + session.id\") {{session._username}}\r\n\r\n                template(v-if=\"!isLoggedIn\")\r\n                    a(class=\"navbar-item\", href=\"/auth/login\") Login\r\n</template>\r\n\r\n<script>\r\n    import Vue from \"vue\";\r\n    import Axios from \"axios\";\r\n    import {mapState} from \"vuex\";\r\n\r\n    export default Vue.extend({\r\n        name: \"Navbar\",\r\n        data() {\r\n            return {\r\n                isNavbarOpen: false\r\n            }\r\n        },\r\n        methods: {\r\n            switchTheme() {\r\n                let darkmode = this.$store.state.darkmode;\r\n\r\n                this.$store.commit(\"setDarkMode\", !darkmode);\r\n            }\r\n        },\r\n        computed: mapState([\"session\", \"isLoggedIn\", \"darkmode\"])\r\n    });\r\n</script>"]}